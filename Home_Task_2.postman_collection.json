{
	"info": {
		"_postman_id": "2087af37-0422-4ab7-8f00-86ed862f9477",
		"name": "Home_Task_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16212042"
	},
	"item": [
		{
			"name": "Class_Work",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?login=Artem&password=6665759",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "Artem"
						},
						{
							"key": "password",
							"value": "6665759"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Class_Work Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let req = JSON.parse(request.data)\r",
							" let req_name = req.name\r",
							"\r",
							"let name_check = req_name\r",
							"let name = jsonData.person.u_name[0]\r",
							"// console.log(salary_check_12)\r",
							"// console.log(salary_12)\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(name).to.eql(name_check);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Artem\",\r\n   \"age\": 28,\r\n   \"salary\": 1000,\r\n   \"auth_token\": \"/s34lfgbj/None/jjd909/92649kjkWpqc1096None205317evny\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" let jsonData = pm.response.json();\r",
							" let name_check = jsonData.name\r",
							" let age_check = jsonData.age\r",
							" let salary_check = jsonData.salary\r",
							" let family = jsonData.family.children\r",
							" let salary_1_5_check = jsonData.family.u_salary_1_5_year\r",
							" console.log(family)\r",
							" \r",
							" \r",
							"\r",
							"\r",
							"let req = pm.request.body.formdata.toObject()\r",
							"let req_name = req.name\r",
							"let req_age = req.age\r",
							"let req_salary = Number(req.salary)\r",
							"let req_salary_1_5_year = req.salary * 4\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(name_check).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(age_check).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(salary_check).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_1_5_year\", function () {\r",
							"    pm.expect(salary_1_5_check).to.eql(req_salary_1_5_year);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Artem",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let person = {\r",
							"    \"age\": \"28\",\r",
							"    \"family\": {\r",
							"        \"children\": [\r",
							"            [\r",
							"                \"Alex\",\r",
							"                24\r",
							"            ],\r",
							"            [\r",
							"                \"Kate\",\r",
							"                12\r",
							"            ]\r",
							"        ],\r",
							"        \"pets\": {\r",
							"            \"cat\": {\r",
							"                \"age\": 3,\r",
							"                \"name\": \"Sunny\"\r",
							"            },\r",
							"            \"dog\": {\r",
							"                \"age\": 4,\r",
							"                \"name\": \"Luky\"\r",
							"            }\r",
							"        },\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Artem\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let check_name = jsonData.name\r",
							"let check_age = jsonData.age\r",
							"let check_salary = jsonData.salary\r",
							"let check_family = jsonData.family.children\r",
							"console.log(check_family)\r",
							"\r",
							"let req = pm.request.url.query.toObject()\r",
							"let req_name = req.name\r",
							"let req_age = req.age\r",
							"let req_salary = Number(req.salary)\r",
							"\r",
							"\r",
							"pm.test(\"Your test name.\", function () {\r",
							"    pm.expect(check_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age.\", function () {\r",
							"    pm.expect(check_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary.\", function () {\r",
							"    pm.expect(check_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test property name dog.\", function () {\r",
							"    pm.expect(person.family.pets.dog).to.have.property(\"age\" && \"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name of dog.\", function () {\r",
							"    pm.expect(person.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age of dog.\", function () {\r",
							"    pm.expect(person.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Artem&age=28&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Artem"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let check_name = jsonData.name\r",
							"let check_age = jsonData.age\r",
							"let check_salary = jsonData.salary\r",
							"\r",
							"\r",
							"console.log(\"response = \" + check_salary)\r",
							"console.log(\"response[0] = \" + check_salary[0])\r",
							"console.log(\"response[1] = \" + check_salary[1])\r",
							"console.log(\"response[2] = \" + check_salary[2])\r",
							"\r",
							"let req = pm.request.url.query.toObject()\r",
							"let req_name = req.name\r",
							"let req_age = Number(req.age)\r",
							"let req_salary = Number(req.salary)\r",
							"let req_salary_2 = String(req_salary * 2)\r",
							"let req_salary_3 = String(req_salary * 3)\r",
							"console.log(\"request = \" + req_salary)\r",
							"\r",
							"pm.environment.set(\"name_2\", \"Anna\");\r",
							"pm.environment.set(\"age_2\", 23);\r",
							"pm.environment.set(\"salary_2\", 1000);\r",
							"\r",
							"for (i = 0; i < check_salary.length ; i++){\r",
							"    console.log(\"for = \" + check_salary[i])\r",
							"}\r",
							"\r",
							"pm.test(\"Your test name.\", function () {\r",
							"    pm.expect(check_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age.\", function () {\r",
							"    pm.expect(check_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary.\", function () {\r",
							"    pm.expect(check_salary[0]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_2.\", function () {\r",
							"    pm.expect(check_salary[1]).to.eql(req_salary_2);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_3.\", function () {\r",
							"    pm.expect(check_salary[2]).to.eql(req_salary_3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Artem&age=28&salary=100",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Artem"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let check_start_salary = jsonData.start_qa_salary\r",
							"let check_salary_6 = jsonData.qa_salary_after_6_months\r",
							"let check_salary_12 = jsonData.qa_salary_after_12_months\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"let req = pm.request.body.formdata.toObject()\r",
							"let req_start_salary = Number(req.salary)\r",
							"let req_salary_6 = req.salary * 2\r",
							"let req_salary_12 = req.salary * 2.7\r",
							"let req_salary_1_5_years = req.salary * 3.3\r",
							"let req_salary_3_5_years = req.salary * 3.8\r",
							"let req_salary_5_years = req.salary * 4.2\r",
							"let req_age = Number(req.age)\r",
							"\r",
							"const person = {\r",
							"        \"u_age\": 23,\r",
							"        \"u_name\": [\r",
							"            \"Anna\",\r",
							"            1000,\r",
							"            23\r",
							"        ],\r",
							"        \"u_salary_5_years\": 4200.0\r",
							"}\r",
							"\r",
							"for ( const key of Object.keys(person)) {\r",
							"    console.log(key)\r",
							"    console.log(person[key])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"pm.test('test_start_qa_salary', function(){\r",
							"pm.expect(jsonData).to.have.property('start_qa_salary')\r",
							"});\r",
							"\r",
							"pm.test('test_qa_salary_after_6_months', function(){\r",
							"pm.expect(jsonData).to.have.property('qa_salary_after_6_months')\r",
							"});\r",
							"\r",
							"pm.test('test_qa_salary_after_12_months', function(){\r",
							"pm.expect(jsonData).to.have.property('qa_salary_after_12_months')\r",
							"});\r",
							"\r",
							"pm.test('test_qa_salary_after_1.5_year', function(){\r",
							"pm.expect(jsonData).to.have.property('qa_salary_after_1.5_year')\r",
							"});\r",
							"\r",
							"pm.test('test_qa_salary_after_3.5_years', function(){\r",
							"pm.expect(jsonData).to.have.property('qa_salary_after_3.5_years')\r",
							"});\r",
							"\r",
							"pm.test('test_property_person', function(){\r",
							"pm.expect(jsonData).to.have.property('person')\r",
							"});\r",
							"\r",
							"pm.test(\"test start_qa_salary\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(req_start_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"test qa_salary_6\", function () {\r",
							"    pm.expect(check_salary_6 ).to.eql(req_salary_6);\r",
							"});\r",
							"\r",
							"pm.test(\"test qa_salary_6\", function () {\r",
							"    pm.expect(check_salary_12 ).to.eql(req_salary_12);\r",
							"});\r",
							"\r",
							"pm.test(\"test qa_salary_1.5_years\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(req_salary_1_5_years);\r",
							"});\r",
							"\r",
							"pm.test(\"test qa_salary_3.5_years\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(req_salary_3_5_years);\r",
							"});\r",
							"\r",
							"pm.test(\"test u_name salary = salary from request\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(req_start_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"test u_age = age from request\", function () {\r",
							"    pm.expect(req_age).to.eql(jsonData.person.u_age);\r",
							"});\r",
							"\r",
							"pm.test(\"test qa_salary_5_years\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(req_salary_5_years);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary_2}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age_2}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name_2}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}
